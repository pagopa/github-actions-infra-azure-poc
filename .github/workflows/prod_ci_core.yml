name: Continuous Integration on prod core

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    paths:
      - 'src/core/**'

permissions:
  id-token: write
  contents: read

env:
  DIR: "src/core"
  AZURE_ENVIRONMENT: prod

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment: prod-runner
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-create-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-create-action@c2954db8bf9ebdcc04db3284f347e33c0118dd6b
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          pat_token: ${{ secrets.BOT_TOKEN }}

  runner_job:
    name: Runner Job
    runs-on: [self-hosted, "${{ needs.create_runner.outputs.runner_name }}"]
    environment: prod-ci
    needs: create_runner
    steps:
      - name: Checkout
        id: checkout
        # from https://github.com/actions/checkout/commits/main
        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup terraform
        id: setup-version
        shell: bash
        run: |
          TERRAFORM_VERSION=`cat .terraform-version`
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          mkdir -p ${HOME}/bin
          mv terraform ${HOME}/bin/
          export PATH="${HOME}/bin:$PATH"
          terraform -v

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform plan
        shell: bash
        run: |
          export PATH="${HOME}/bin:$PATH"
          export ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
          export ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}
          export ARM_USE_OIDC=true
          export ARM_USE_AZUREAD=true
          export ARM_STORAGE_USE_AZUREAD=true

          cd ${{ env.DIR }}

          bash terraform.sh plan ${{ env.AZURE_ENVIRONMENT }} -lock-timeout=300s -lock=false

  cleanup_runner:
    name: Cleanup Runner
    if: always()
    runs-on: ubuntu-22.04
    environment: prod-runner
    needs: [create_runner, runner_job]
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-cleanup-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-cleanup-action@97731a35e6ffc79b66c4dfd2aae5e4fd04e3ebb5
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN }}
