name: Self Hosted Runner

on:
  # Trigger the workflow on push on the main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'CODEOWNERS'
      - '**.md'
      # - '.**'

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: "df57cbf1-6d41-4c9c-a618-e446521e4aa3"
  AZURE_TENANT_ID: "7788edaf-0346-4068-9d79-c868aed15b3d"
  AZURE_SUBSCRIPTION_ID: "ac17914c-79bf-48fa-831e-1359ef74c1d5"
  CONTAINER_APP_ENVIRONMENT_NAME: "gitpoc-d-github-runner-cae"
  RESOURCE_GROUP_NAME: "gitpoc-d-github-runner-rg"

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        uses: pagopa/github-self-hosted-runner-azure-create-action@main # TODO change to sha
        with:
          client_id: ${{ env.AZURE_CLIENT_ID }}
          tenant_id: ${{ env.AZURE_TENANT_ID }}
          subscription_id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ env.CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ env.RESOURCE_GROUP_NAME }}
          pat_token: ${{ secrets.BOT_TOKEN }}

  runner_job:
    name: Runner Job
    runs-on: [self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    needs: create_runner

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3 # TODO change to sha
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Read terraform version
        id: read-version
        shell: bash
        run: |
          TERRAFORM_VERSION=`cat .terraform-version`
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          mkdir -p ${HOME}/bin
          mv terraform ${HOME}/bin/
          export PATH="${HOME}/bin:$PATH"
          ls -la ${HOME}
          # . ${HOME}/.profile
          terraform -v

      # - name: Setup Terraform
      #   # from https://github.com/hashicorp/setup-terraform/commits/main
      #   uses: hashicorp/setup-terraform@8feba2b913ea459066180f9cb177f58a881cf146
      #   with:
      #     terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Apply
        shell: bash
        run: |
          export ARM_CLIENT_ID=${{ env.AZURE_CLIENT_ID }}
          export ARM_TENANT_ID=${{ env.AZURE_TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ env.AZURE_SUBSCRIPTION_ID }}
          export ARM_USE_OIDC=true

          cd src/core
          ls -la
          terraform -v

          # bash terraform.sh plan dev \
          #   -lock-timeout=300s \
          #   -lock=false

  cleanup_runner:
    name: Cleanup Runner
    if: always()
    runs-on: ubuntu-22.04
    needs: [ create_runner, runner_job]
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        uses: pagopa/github-self-hosted-runner-azure-cleanup-action@main # TODO change to sha
        with:
          client_id: ${{ env.AZURE_CLIENT_ID }}
          tenant_id: ${{ env.AZURE_TENANT_ID }}
          subscription_id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          resource_group_name: ${{ env.RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN }}
